networks:
  paperless:
    name: paperless
  paperless-web:
    name: paperless-web
secrets:
  paperless_postgres_password:
    file: ../.secrets/paperless_postgres_password
services:
  paperless-gotenberg:
    command:
      - gotenberg
      - "--chromium-disable-javascript=true"
      - "--chromium-allow-list=file:///tmp/.*"
    container_name: paperless-gotenberg
    image: docker.io/gotenberg/gotenberg:8.17
    networks:
      - paperless
    restart: unless-stopped
  paperless-ngx:
    container_name: paperless-ngx
    depends_on:
      - paperless-postgres
      - paperless-redis
      - paperless-gotenberg
      - paperless-tika
    environment:
      PAPERLESS_DBHOST: paperless-postgres
      PAPERLESS_DBPASS_FILE: /run/secrets/paperless_postgres_password
      PAPERLESS_REDIS: redis://paperless-redis:6379
      PAPERLESS_TIKA_ENABLED: 1
      PAPERLESS_TIKA_ENDPOINT: http://paperless-tika:9998
      PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://paperless-gotenberg:3000
      PAPERLESS_URL: https://paperless.${HOST}
      USERMAP_GID: ${GUID}
      USERMAP_UID: ${PUID}
    healthcheck:
      interval: 30s
      retries: 5
      test:
        - CMD
        - curl
        - "-fs"
        - "-S"
        - "--max-time"
        - "2"
        - http://localhost:8000
      timeout: 10s
    image: ghcr.io/paperless-ngx/paperless-ngx:2.14.7
    labels:
      readme.description: Document Management System.
      readme.links.github: https://github.com/paperless-ngx/paperless-ngx
      traefik.docker.network: paperless-web
      traefik.enable: true
      traefik.http.routers.paperless-ngx.entrypoints: https
      traefik.http.routers.paperless-ngx.rule: Host(`paperless.${HOST}`)
      traefik.http.services.paperless-ngx.loadbalancer.server.port: 8000
    networks:
      - paperless
      - paperless-web
    restart: unless-stopped
    secrets:
      - paperless_postgres_password
    volumes:
      - ${DATA_DIR}/paperless/data:/usr/src/paperless/data
      - ${DATA_DIR}/paperless/media:/usr/src/paperless/media
      - ${DATA_DIR}/paperless/export:/usr/src/paperless/export
      - ${DATA_DIR}/paperless/consume:/usr/src/paperless/consume
      - ${LOG_DIR}/paperless:/usr/src/paperless/data/log
  paperless-postgres:
    container_name: paperless-postgres
    environment:
      POSTGRES_DB: paperless
      POSTGRES_PASSWORD_FILE: /run/secrets/paperless_postgres_password
      POSTGRES_USER: paperless
    image: postgres:14.17
    labels:
      ofelia.enabled: "true"
      ofelia.job-exec.paperless-postgres-backup.command: /bin/sh -c 'pg_dump -U paperless -d paperless > /backups/paperless.sql'
      ofelia.job-exec.paperless-postgres-backup.schedule: 0 0 04 * * *
      ofelia.job-exec.paperless-postgres-backup.user: postgres
    networks:
      - paperless
    restart: unless-stopped
    secrets:
      - paperless_postgres_password
    tmpfs:
      - /var/lib/postgresql/data/pg_stat_tmp:rw,mode=1777
    volumes:
      - ${DATA_DIR}/postgres/paperless:/var/lib/postgresql/data
      - ${DATA_DIR}/postgres/backups:/backups
  paperless-redis:
    container_name: paperless-redis
    image: redis:7.4.1
    networks:
      - paperless
    restart: unless-stopped
    volumes:
      - ${DATA_DIR}/redis/paperless:/data
  paperless-scanner:
    container_name: paperless-scanner
    environment:
      - IP=${PRINTER_HOST}
      - LABEL=Paperless
      - PATTERN="scan"_dd.mm.yyyy_hh:MM:ss
      - PGID
      - PUID
      - TZ
    image: manuc66/node-hp-scan-to:latest
    networks:
      - paperless
    restart: unless-stopped
    volumes:
      - ${DATA_DIR}/paperless/consume:/scan
  paperless-tika:
    container_name: paperless-tika
    image: ghcr.io/paperless-ngx/tika:2.9.1-minimal
    networks:
      - paperless
    restart: unless-stopped
    tmpfs:
      - /tmp:rw,mode=1777
