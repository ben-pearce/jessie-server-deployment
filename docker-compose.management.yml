---
networks:
  homer-web:
    name: homer-web
  portainer-web:
    name: portainer-web
services:
  homer:
    container_name: homer
    environment:
      - UID=${PUID}
      - GID=${GUID}
    image: b4bz/homer:latest
    labels:
      com.centurylinklabs.watchtower.enable: true
      readme.description: A very simple static homepage for your server.
      readme.links.github: https://github.com/bastienwirtz/homer
      traefik.docker.network: homer-web
      traefik.enable: true
      traefik.http.routers.homer.entrypoints: https
      traefik.http.routers.homer.middlewares: authelia
      traefik.http.routers.homer.rule: Host(`${HOST}`)
    networks:
      homer-web:
    restart: unless-stopped
    volumes:
      - ${CONFIG_DIR}/homer:/www/assets
  ofelia:
    command: daemon --docker
    container_name: ofelia
    environment:
      - TZ
    image: mcuadros/ofelia:latest
    labels:
      ofelia.enabled: true
      ofelia.job-run.deezer-arl-fetch.command: consume json --file /config/deemix/login.json --path arl
      ofelia.job-run.deezer-arl-fetch.image: ghcr.io/ben-pearce/deezer-arl@v1.0.5
      ofelia.job-run.deezer-arl-fetch.schedule: 0 30 */3 * * *
      ofelia.job-run.deezer-arl-fetch.volume: |
        [ "${DATA_DIR}/deezer-arl/:/app/data", "${CONFIG_DIR}/deemix:/config/deemix" ]
      ofelia.job-run.deezer-arl-pull.command: pull --max-arls 3 --requires-can-stream-lossless
      ofelia.job-run.deezer-arl-pull.image: ghcr.io/ben-pearce/deezer-arl@v1.0.5
      ofelia.job-run.deezer-arl-pull.schedule: 0 0 */3 * * *
      ofelia.job-run.deezer-arl-pull.volume: ${DATA_DIR}/deezer-arl/:/app/data
      readme.description: Docker job scheduler.
      readme.links.github: https://github.com/mcuadros/ofelia
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
  portainer:
    container_name: portainer
    image: portainer/portainer-ce
    labels:
      com.centurylinklabs.watchtower.enable: true
      readme.description: Universal management GUI for Docker.
      readme.links.github: https://github.com/portainer/portainer
      traefik.docker.network: portainer-web
      traefik.enable: true
      traefik.http.routers.portainer.entrypoints: https
      traefik.http.routers.portainer.rule: Host(`docker.${HOST}`)
      traefik.http.services.portainer.loadbalancer.server.port: 9000
    networks:
      portainer-web:
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${DATA_DIR}/portainer:/data
  watchtower:
    container_name: watchtower
    environment:
      - WATCHTOWER_LABEL_ENABLE=true
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_SCHEDULE=0 0 0 1 * *
      - WATCHTOWER_NOTIFICATIONS=email
      - WATCHTOWER_NOTIFICATION_EMAIL_FROM=${SMTP_USER}
      - WATCHTOWER_NOTIFICATION_EMAIL_TO=${ADMIN_MAIL}
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER=${SMTP_HOST}
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PORT=587
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_USER=${SMTP_USER}
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PASSWORD=/run/secrets/smtp_password
    image: containrrr/watchtower
    labels:
      readme.description: A process for automating Docker container base image updates.
      readme.links.docker: https://hub.docker.com/r/containrrr/watchtower
      readme.links.github: https://github.com/containrrr/watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    secrets:
      - smtp_password
