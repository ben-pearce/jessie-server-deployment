---
networks:
  cloudflared-web:
    name: cloudflared-web
  tunnel:
    name: tunnel
  tunnel-web:
    name: tunnel-web
secrets:
  cloudflare_dns_api_token:
    file: ./.secrets/cloudflare_dns_api_token
  cloudflare_zone_api_token:
    file: ./.secrets/cloudflare_zone_api_token
  cloudflared_cert:
    file: ./.secrets/cloudflared_cert
  cloudflared_token:
    file: ./.secrets/cloudflared_token
  pia_password:
    file: ./.secrets/pia_password
  pia_username:
    file: ./.secrets/pia_username
services:
  traefik:
    command:
      - '--global.sendAnonymousUsage=false'
      - '--api.insecure=true'
      - '--api.dashboard=true'
      - '--providers.docker=true'
      - '--providers.docker.exposedbydefault=false'
      - '--entrypoints.http.address=:80'
      - '--entrypoints.http.http.redirections.entrypoint.to=https'
      - '--entrypoints.http.http.redirections.entrypoint.scheme=https'
      - '--entrypoints.https.address=:443'
      - '--entrypoints.https.forwardedheaders.trustedips=${LAN_SUBNET}'
      - '--entrypoints.https.http.tls=true'
      - '--entrypoints.https.http.tls.certResolver=resolver'
      - '--entrypoints.https.http.tls.domains[0].main=${HOST}'
      - '--entrypoints.https.http.tls.domains[0].sans=*.${HOST}'
      - '--certificatesresolvers.resolver.acme.dnschallenge=true'
      - '--certificatesresolvers.resolver.acme.dnschallenge.provider=cloudflare'
      - '--certificatesresolvers.resolver.acme.email=${ADMIN_MAIL}'
      - '--certificatesresolvers.resolver.acme.storage=/letsencrypt/acme.json'
      - '--certificatesresolvers.resolver.acme.dnschallenge.resolvers=1.1.1.1,1.0.0.1'
      - '--serversTransport.insecureSkipVerify=true'
    container_name: traefik
    environment:
      - CF_ZONE_API_TOKEN_FILE=/run/secrets/cloudflare_zone_api_token
      - CF_DNS_API_TOKEN_FILE=/run/secrets/cloudflare_dns_api_token
    hostname: traefik
    image: traefik:v2.9
    labels:
      readme.description: The Cloud Native Application Proxy.
      readme.links.github: https://github.com/traefik/traefik
      traefik.enable: true
      traefik.http.routers.api.entrypoints: https
      traefik.http.routers.api.rule: Host(`traefik.${HOST}`)
      traefik.http.services.traefik.loadbalancer.server.port: 8080
    networks:
      arr-web:
      authelia-web:
      cloudflared-web:
      cyberchef-web:
      deemix-web:
      default:
      firefly-web:
      freshrss-web:
      feishin-web:
      homer-web:
      n8n-web:
      immich-web:
      jellyfin-web:
      navidrome-web:
      nextcloud-web:
      paperless-web:
      pgadmin-web:
        aliases:
          - login.${HOST}
      portainer-web:
        aliases:
          - login.${HOST}
      rxresume-web:
      tunnel-web:
      uptime-kuma-web:
      vaultwarden-web:
      yaade-web:
      zabbix-web:
      obsidian-web:
      cobalt-web:
      wallabag-web:
      stirling-pdf-web:
      fdroid-web:
    ports:
      - '443:443'
      - '80:80'
    restart: unless-stopped
    secrets:
      - cloudflare_dns_api_token
      - cloudflare_zone_api_token
    volumes:
      - ${DATA_DIR}/letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
  tunnel:
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    container_name: tunnel
    environment:
      - LOC=uk
      - USER_FILE=/run/secrets/pia_username
      - PASS_FILE=/run/secrets/pia_password
      - EXIT_ON_FATAL=1
      - LOCAL_NETWORK=${LAN_SUBNET}
      - VPNDNS=0
    healthcheck:
      interval: 30s
      retries: 3
      test: ping -c 1 1.1.1.1 || exit 1
      timeout: 10s
    image: thrnz/docker-wireguard-pia
    labels:
      readme.description: A Docker container for using WireGuard with PIA.
      readme.links.docker: https://hub.docker.com/r/thrnz/docker-wireguard-pia
    networks:
      tunnel:
      tunnel-web:
    ports:
      - 9981:9981/tcp
      - 9982:9982/tcp
    restart: unless-stopped
    secrets:
      - pia_username
      - pia_password
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv6.conf.default.disable_ipv6=1
      - net.ipv6.conf.all.disable_ipv6=1
      - net.ipv6.conf.lo.disable_ipv6=1
    volumes:
      - ${DATA_DIR}/pia:/pia
  unifi-controller:
    container_name: unifi-controller
    environment:
      - PUID
      - PGID
      - MEM_LIMIT=1024
      - MEM_STARTUP=1024
    image: ghcr.io/linuxserver/unifi-controller
    labels:
      com.centurylinklabs.watchtower.enable: true
      readme.description: Wireless network management.
      traefik.enable: true
      traefik.http.routers.unifi.entrypoints: https
      traefik.http.routers.unifi.rule: Host(`unifi.${HOST}`)
      traefik.http.services.unifi-controller.loadbalancer.server.port: 8443
      traefik.http.services.unifi-controller.loadbalancer.server.scheme: https
    ports:
      - 3478:3478/udp
      - 10001:10001/udp
      - '8080:8080'
    restart: unless-stopped
    tmpfs:
      - /tmp:rw,mode=1777
    volumes:
      - ${DATA_DIR}/unifi:/config
